# Generated by Django 4.2.24 on 2025-09-07 16:55

import core.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=150, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('profile_picture', models.ImageField(upload_to='profiles/')),
                ('primary_phone', models.CharField(max_length=16, validators=[django.core.validators.RegexValidator('^\\+?[1-9]\\d{7,14}$', 'Enter a valid phone number with country code, e.g. +919876543210')])),
                ('primary_type', models.CharField(choices=[('whatsapp', 'WhatsApp'), ('telegram', 'Telegram'), ('both', 'Both')], default='whatsapp', max_length=20)),
                ('secondary_phone', models.CharField(blank=True, max_length=16, null=True, validators=[django.core.validators.RegexValidator('^\\+?[1-9]\\d{7,14}$', 'Enter a valid phone number with country code, e.g. +919876543210')])),
                ('secondary_type', models.CharField(blank=True, choices=[('whatsapp', 'WhatsApp'), ('telegram', 'Telegram'), ('both', 'Both')], max_length=20, null=True)),
                ('is_satsangi', models.BooleanField(default=False)),
                ('is_ambrish', models.BooleanField(default=False)),
                ('department_notes', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', core.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='SiteSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drive_profile_folder', models.CharField(blank=True, help_text='Drive folder id or full link for profile pictures', max_length=255)),
                ('drive_reference_folder', models.CharField(blank=True, help_text='Drive folder id or full link for reference images', max_length=255)),
                ('drive_data_folder', models.CharField(blank=True, help_text='Drive folder id or full link for data files', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='MediaRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_number', models.CharField(editable=False, max_length=40, unique=True)),
                ('customer_name', models.CharField(max_length=120)),
                ('customer_email', models.EmailField(blank=True, max_length=254)),
                ('customer_phone', models.CharField(max_length=16, validators=[django.core.validators.RegexValidator('^\\+?[1-9]\\d{7,14}$', 'Enter a valid phone number with country code, e.g. +919876543210')])),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('location', models.CharField(max_length=255)),
                ('reference_image', models.FileField(blank=True, null=True, upload_to='references/')),
                ('reference_image_drive_id', models.CharField(blank=True, max_length=128)),
                ('note', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('open', 'Open'), ('resolved', 'Resolved')], default='open', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddConstraint(
            model_name='mediarequest',
            constraint=models.UniqueConstraint(fields=('user', 'date', 'time', 'location'), name='unique_request_per_slot'),
        ),
    ]
